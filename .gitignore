# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
=======
# -----------------------------
# Python
# -----------------------------
__pycache__/
*.py[cod]
*.so
*.pyo
*.pyd
*.db
*.sqlite3

# Byte-compiled / optimized / DLL files
*.pyc
*.pyo
*.pyd

# Virtual environment
venv/
env/
ENV/
.venv/
venv.bak/

# Distribution / packaging
>>>>>>> master
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
=======
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
>>>>>>> master
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/
=======
*.py,cover
.hypothesis/
.pytest_cache/
pytestdebug.log
>>>>>>> master

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py


.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site
=======
# Pyre type checker
.pyre/
>>>>>>> master

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

<<<<<<< HEAD
# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/


# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

.cursorignore
.cursorindexingignore

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/
=======
# -----------------------------
# Environment files
# -----------------------------
.env
.env.*
*.env
*.ini
*.cfg
*.toml
secrets.json

# -----------------------------
# IDEs and editors
# -----------------------------
.idea/
.vscode/
*.swp
*.swo
*.bak

# -----------------------------
# OS files
# -----------------------------
.DS_Store
Thumbs.db
desktop.ini

# -----------------------------
# Logs and temp files
# -----------------------------
*.log
tmp/
temp/
